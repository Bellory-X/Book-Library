/*
 * This file is generated by jOOQ.
 */
package org.jooq.generated.public_;


import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.generated.public_.tables.Book;
import org.jooq.generated.public_.tables.Client;
import org.jooq.generated.public_.tables.ClientBook;
import org.jooq.generated.public_.tables.FlywaySchemaHistory;
import org.jooq.generated.public_.tables.records.BookRecord;
import org.jooq.generated.public_.tables.records.ClientBookRecord;
import org.jooq.generated.public_.tables.records.ClientRecord;
import org.jooq.generated.public_.tables.records.FlywaySchemaHistoryRecord;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<BookRecord> BOOK_PKEY = Internal.createUniqueKey(Book.BOOK, DSL.name("book_pkey"), new TableField[] { Book.BOOK.ID }, true);
    public static final UniqueKey<ClientRecord> CLIENT_PKEY = Internal.createUniqueKey(Client.CLIENT, DSL.name("client_pkey"), new TableField[] { Client.CLIENT.ID }, true);
    public static final UniqueKey<ClientBookRecord> CLIENT_BOOK_PKEY = Internal.createUniqueKey(ClientBook.CLIENT_BOOK, DSL.name("client_book_pkey"), new TableField[] { ClientBook.CLIENT_BOOK.CLIENT_ID, ClientBook.CLIENT_BOOK.BOOK_ID }, true);
    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ClientBookRecord, BookRecord> CLIENT_BOOK__CLIENT_BOOK_BOOK_ID_FKEY = Internal.createForeignKey(ClientBook.CLIENT_BOOK, DSL.name("client_book_book_id_fkey"), new TableField[] { ClientBook.CLIENT_BOOK.BOOK_ID }, Keys.BOOK_PKEY, new TableField[] { Book.BOOK.ID }, true);
    public static final ForeignKey<ClientBookRecord, ClientRecord> CLIENT_BOOK__CLIENT_BOOK_CLIENT_ID_FKEY = Internal.createForeignKey(ClientBook.CLIENT_BOOK, DSL.name("client_book_client_id_fkey"), new TableField[] { ClientBook.CLIENT_BOOK.CLIENT_ID }, Keys.CLIENT_PKEY, new TableField[] { Client.CLIENT.ID }, true);
}
